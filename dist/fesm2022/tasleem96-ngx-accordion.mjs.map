{"version":3,"file":"tasleem96-ngx-accordion.mjs","sources":["../../src/Accordion.ts","../../src/AccordionToggle.ts","../../src/AccordionGroup.ts","../../src/AccordionHeading.ts","../../src/index.ts","../../src/tasleem96-ngx-accordion.ts"],"sourcesContent":["import { ContentChildren, Component, QueryList, Input, forwardRef, AfterContentInit, OnDestroy } from \"@angular/core\";\nimport { AccordionGroup } from \"./AccordionGroup\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n    selector: \"accordion\",\n    template: `\n<div class=\"panel-group\" role=\"tablist\" aria-multiselectable=\"true\">\n    <ng-content></ng-content>\n</div>\n`\n})\nexport class Accordion implements AfterContentInit, OnDestroy {\n\n    @Input()\n    closeOthers = true;\n\n    @Input()\n    showArrows = false;\n\n    @Input()\n    expandAll = false;\n\n    @ContentChildren(forwardRef(() => AccordionGroup))\n    groups: QueryList<AccordionGroup> | undefined;\n\n    private oldGroups: AccordionGroup[] = [];\n    private subscription: Subscription | undefined;\n\n    ngAfterContentInit() {\n        if (this.expandAll) {\n            this.closeOthers = false;\n            if (this.groups) {\n                this.oldGroups = this.groups.toArray();\n                this.oldGroups.forEach(group => {\n                    group.openOnInitialization();\n                });\n\n                this.subscription = this.groups.changes.subscribe(() => {\n                    const newGroups = this.groups!.toArray().filter(group => {\n                        return this.oldGroups.indexOf(group) === -1;\n                    });\n                    newGroups.forEach(group => {\n                        group.openOnInitialization();\n                    });\n                    this.oldGroups = this.groups!.toArray();\n                });\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    closeAll() {\n        this.groups?.toArray().forEach(group => {\n            group.isOpened = false;\n        });\n    }\n\n}\n","import { Component, HostListener, forwardRef, Inject, Host } from \"@angular/core\";\nimport { AccordionGroup } from \"./AccordionGroup\";\n\n@Component({\n    selector: \"accordion-toggle\",\n    template: `<ng-content></ng-content>`\n})\nexport class AccordionToggle {\n\n    constructor(@Host() @Inject(forwardRef(() => AccordionGroup)) private accordionGroup: AccordionGroup) {\n    }\n\n    @HostListener(\"click\")\n    onClick() {\n        this.accordionGroup.toggle();\n    }\n\n}","import {\n  Component,\n  Input,\n  Host,\n  forwardRef,\n  Inject,\n  ContentChild,\n  ElementRef,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter\n} from \"@angular/core\";\nimport { Accordion } from \"./Accordion\";\nimport { AccordionToggle } from \"./AccordionToggle\";\n\n@Component({\n  selector: \"accordion-group\",\n  template: `\n  <div class=\"panel panel-default\" [class.dropup]=\"isOpened\" [class.disabled]=\"disabled\">\n    <div class=\"panel-heading\" role=\"tab\" (click)=\"checkAndToggle()\">\n      <h4 class=\"panel-title\">\n        <a *ngIf=\"heading\" role=\"button\" data-toggle=\"collapse\" [attr.aria-expanded]=\"isOpened\">\n            {{ heading }}\n        </a>\n        <ng-content select=\"accordion-heading\"></ng-content>\n        <div class=\"caret\" [style.display]=\"accordion.showArrows ? '' : 'none'\">\n        </div>\n      </h4>\n    </div>\n    <div *ngIf=\"isOpened\" class=\"panel-collapse collapse in\" role=\"tabpanel\" [attr.aria-labelledby]=\"heading\">\n      <div class=\"panel-body\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n  `\n})\nexport class AccordionGroup {\n\n  @Input()\n  heading?: string;  // Mark heading as optional\n\n  @Input()\n  isOpened: boolean = false;\n\n  @Output()\n  onOpen = new EventEmitter<void>();\n\n  @Output()\n  onClose = new EventEmitter<void>();\n\n  @Output()\n  onToggle = new EventEmitter<boolean>();\n\n  @ContentChild(AccordionToggle, { static: false })\n  toggler: ElementRef | undefined;\n\n  @Input()\n  disabled: boolean = false;\n\n  constructor(@Host() @Inject(forwardRef(() => Accordion)) public accordion: Accordion,\n    private cdr: ChangeDetectorRef) {\n  }\n\n  checkAndToggle() {\n    // if custom toggle element is supplied, then do nothing, custom toggler will take care of it\n    if (this.toggler)\n      return;\n\n    this.toggle();\n  }\n\n  toggle() {\n    if (this.disabled)\n      return;\n\n    const isOpenedBeforeWeChange = this.isOpened;\n    if (this.accordion.closeOthers)\n      this.accordion.closeAll();\n\n    this.isOpened = !isOpenedBeforeWeChange;\n    if (this.isOpened) {\n      this.onOpen.emit();\n    } else {\n      this.onClose.emit();\n    }\n    this.onToggle.emit(this.isOpened);\n  }\n\n  openOnInitialization() {\n    this.isOpened = true;\n    this.cdr.detectChanges();\n  }\n\n}","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"accordion-heading\",\n    template: `<ng-content></ng-content>`\n})\nexport class AccordionHeading {\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AccordionGroup } from \"./AccordionGroup\";\nimport { Accordion } from \"./Accordion\";\nimport { AccordionToggle } from \"./AccordionToggle\";\nimport { AccordionHeading } from \"./AccordionHeading\";\n\nexport * from \"./Accordion\";\nexport * from \"./AccordionGroup\";\nexport * from \"./AccordionToggle\";\nexport * from \"./AccordionHeading\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        Accordion,\n        AccordionGroup,\n        AccordionToggle,\n        AccordionHeading\n    ],\n    exports: [\n        Accordion,\n        AccordionGroup,\n        AccordionToggle,\n        AccordionHeading\n    ]\n})\nexport class AccordionModule {\n\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}